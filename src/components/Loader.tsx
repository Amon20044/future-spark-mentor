"use client";

import { useEffect, useState, useRef } from "react";
import gsap from "gsap";

const TracingLoaderAnimation = () => {
  const [show, setShow] = useState(true);
  const loaderRef = useRef(null);
  const svgRef = useRef(null);
  const pathRefs = useRef([]);
  const textRef = useRef(null);
  const imgRef = useRef(null);

  // Reset pathRefs array when component mounts
  useEffect(() => {
    pathRefs.current = pathRefs.current.slice(0, 4);
  }, []);

  // Function to add path elements to the refs array
  const addToPathRefs = (el) => {
    if (el && !pathRefs.current.includes(el)) {
      pathRefs.current.push(el);
    }
  };

  useEffect(() => {
    if (!svgRef.current || pathRefs.current.length === 0 || !textRef.current) return;

    // Create animation timeline
    const tl = gsap.timeline({
      onComplete: () => {
        // After animation completes, fade out the entire loader
        gsap.to(loaderRef.current, {
          opacity: 0,
          duration: 0.8,
          delay: 0.5,
          onComplete: () => setShow(false)
        });
      }
    });

    // Hide text initially
    gsap.set(textRef.current, { opacity: 0, y: 0, x: 15 });
    gsap.set(imgRef.current, { opacity: 0, y: 0, x: 15  });

    // Animate each path separately
    pathRefs.current.forEach((path, index) => {
      // Get path length for animation
      const pathLength = path.getTotalLength();

      // Set initial state - path is invisible
      gsap.set(path, {
        strokeDasharray: pathLength,
        strokeDashoffset: pathLength,
        fill: "rgba(255, 206, 50, 0)",  // Start with transparent fill
        stroke: index === 0 ? "#FFCE32" : "#23499A", // Different color for first path
        strokeWidth: 4
      });

      // Add to timeline with staggered start times
      tl.to(path, {
        strokeDashoffset: 0,
        duration: 1.5,
        ease: "power2.inOut"
      }, index * 0.2) // Stagger the start time of each path
        // Fill the path after tracing
        .to(path, {
          fill: index === 0 ? "#FFCE32" : "#23499A", // Match fill to stroke color
          duration: 1,
          ease: "power2.inOut"
        }, `-=${index === 0 ? 0.5 : 0.3}`); // Overlap the fill animation slightly
    });

    // Fade in text after all paths are traced
    tl.to(textRef.current, {
      opacity: 1,
      y: -150,
      x: 15,
      duration: 0.8,
      ease: "power3.out"
    }, "-=0.8");

    tl.to(imgRef.current, {
      opacity: 1,
      y: -130,
      x: 15,
      duration: 0.5,
      ease: "power3.out"
    }, "-=1.5");

    
  }, []);

  // If we shouldn't show the loader, return null
  if (!show) return null;

  return (
    <div
      ref={loaderRef}
      className="fixed inset-0 flex flex-col items-center justify-center bg-white z-50"
    >
      <div className="flex flex-col items-center space-y-8">
        <div className="w-48 h-48">

          <svg ref={svgRef} viewBox="0 0 350 250" xmlns="http://www.w3.org/2000/svg">
            <path ref={addToPathRefs} d="M81.4455 9.44164C77.4407 15.6978 73.4431 24.1574 72.5587 28.2384C70.151 39.369 69.4716 39.6902 61.2379 33.5852C52.8588 27.374 42.2222 21.7886 33.9694 19.2663C28.9729 17.7406 28.6106 18.3263 28.6845 27.8251C28.7274 33.4317 30.706 43.5988 33.085 50.4194L37.4093 62.8183H30.7417C22.7536 62.8183 0 67.4543 0 69.0838C0 69.7168 3.11088 74.6763 6.91307 80.1059C25.7572 107.015 45.2091 114.712 75.8221 107.369C88.5803 104.308 94.2729 100.605 86.2156 100.605C83.2859 100.605 75.7625 98.0311 69.4955 94.8853C54.0412 87.1248 34.184 65.18 42.6179 65.18C47.7074 65.18 62.4966 72.8578 70.0318 79.4139L78.2608 86.5722L73.6958 74.6692C69.1784 62.8938 67.4644 43.9106 70.9186 43.9413C74.449 43.972 84.299 60.9549 87.0881 71.8163L89.932 82.8927L91.7413 74.6267C94.0464 64.0936 100.976 50.4831 106.232 46.1612C110.018 43.0485 110.235 43.8184 109.272 56.9471C108.7 64.7218 106.407 74.7023 104.175 79.1234C98.6663 90.0415 98.9142 90.1478 108.273 80.8781C115.815 73.4057 136.927 63.0686 139.48 65.598C141.675 67.7755 128.643 82.5998 117.846 90.2045C111.787 94.472 103.71 98.6428 99.8987 99.4717C84.5898 102.804 98.1132 107.636 122.767 107.641C143.365 107.646 168.074 92.0962 178.686 72.4516C181.032 68.1085 180.541 67.1874 174.71 64.9863C171.053 63.6047 162.696 62.0625 156.14 61.5595C149.585 61.0564 144.006 60.603 143.747 60.551C143.487 60.4991 144.827 56.77 146.726 52.2662C148.626 47.7625 150.181 38.1244 150.181 30.8528C150.181 18.2248 149.937 17.7028 144.817 19.271C134.731 22.3601 122.769 29.2917 117.057 35.3565C111.034 41.7496 107.289 41.5843 107.248 34.929C107.222 30.3261 97.5745 9.52194 92.3015 2.69193C88.8735 -1.74569 88.4301 -1.46938 81.4455 9.44164Z" fill="#FFCE32" />
            <path ref={addToPathRefs} d="M85.1245 113.617H100.32V198.186C100.32 205.734 98.8493 212.146 95.9082 217.421C92.9672 222.697 88.8212 226.702 83.4702 229.437C78.1191 232.171 71.8082 233.538 64.5373 233.538C57.675 233.538 51.5683 232.363 46.2172 230.014C40.8662 227.627 36.6589 224.238 33.5953 219.848C30.5318 215.457 29 210.239 29 204.193H43.9502C43.9502 207.544 44.8284 210.47 46.5849 212.973C48.3821 215.438 50.833 217.364 53.9374 218.75C57.0418 220.136 60.5751 220.83 64.5373 220.83C68.908 220.83 72.6252 219.963 75.6887 218.23C78.7523 216.497 81.0806 213.955 82.6736 210.605C84.3075 207.216 85.1245 203.076 85.1245 198.186V113.617Z" fill="#23499A" />
            <path ref={addToPathRefs} d="M199.395 143.193C198.66 137.34 195.678 132.795 190.45 129.561C185.221 126.326 178.808 124.708 171.211 124.708C165.655 124.708 160.795 125.556 156.628 127.25C152.502 128.944 149.276 131.274 146.947 134.24C144.66 137.205 143.516 140.574 143.516 144.348C143.516 147.506 144.313 150.221 145.906 152.493C147.539 154.727 149.623 156.595 152.155 158.097C154.688 159.56 157.343 160.773 160.121 161.736C162.898 162.66 165.451 163.411 167.779 163.989L180.524 167.223C183.792 168.032 187.427 169.149 191.43 170.574C195.474 171.999 199.334 173.943 203.01 176.408C206.728 178.834 209.791 181.954 212.201 185.766C214.611 189.579 215.816 194.258 215.816 199.803C215.816 206.196 214.039 211.972 210.486 217.133C206.973 222.293 201.826 226.394 195.045 229.437C188.305 232.479 180.115 234 170.475 234C161.489 234 153.707 232.633 147.131 229.899C140.595 227.164 135.449 223.352 131.691 218.461C127.974 213.57 125.87 207.89 125.38 201.42H141.065C141.474 205.888 143.067 209.585 145.844 212.511C148.663 215.4 152.217 217.556 156.506 218.981C160.835 220.367 165.492 221.061 170.475 221.061C176.276 221.061 181.484 220.175 186.1 218.403C190.715 216.593 194.371 214.09 197.067 210.894C199.763 207.659 201.111 203.885 201.111 199.572C201.111 195.644 199.947 192.448 197.619 189.983C195.29 187.518 192.227 185.516 188.428 183.975C184.629 182.435 180.524 181.087 176.112 179.932L160.672 175.773C150.869 173.116 143.108 169.322 137.389 164.393C131.67 159.464 128.811 153.013 128.811 145.042C128.811 138.418 130.71 132.641 134.509 127.712C138.349 122.744 143.496 118.893 149.95 116.159C156.444 113.386 163.695 112 171.701 112C179.789 112 186.978 113.367 193.268 116.101C199.559 118.797 204.542 122.494 208.218 127.192C211.936 131.89 213.896 137.224 214.101 143.193H199.395Z" fill="#23499A" />
            <path ref={addToPathRefs} d="M326.579 150.587C325.231 146.698 323.454 143.212 321.249 140.132C319.084 137.012 316.49 134.355 313.467 132.16C310.485 129.965 307.095 128.29 303.296 127.134C299.497 125.979 295.331 125.402 290.797 125.402C283.363 125.402 276.602 127.211 270.516 130.831C264.43 134.451 259.589 139.785 255.995 146.832C252.4 153.88 250.603 162.525 250.603 172.769C250.603 183.013 252.421 191.658 256.056 198.705C259.691 205.753 264.614 211.086 270.822 214.706C277.031 218.326 284.016 220.136 291.777 220.136C298.966 220.136 305.298 218.692 310.771 215.804C316.286 212.877 320.575 208.757 323.638 203.442C326.743 198.089 328.295 191.793 328.295 184.553L332.952 185.477H295.208V172.769H343V185.477C343 195.22 340.794 203.693 336.383 210.894C332.012 218.095 325.967 223.679 318.246 227.646C310.567 231.574 301.744 233.538 291.777 233.538C280.667 233.538 270.904 231.073 262.49 226.144C254.116 221.215 247.58 214.206 242.883 205.117C238.226 196.029 235.898 185.246 235.898 172.769C235.898 163.411 237.225 154.997 239.88 147.526C242.576 140.016 246.375 133.623 251.277 128.348C256.179 123.072 261.979 119.028 268.678 116.217C275.377 113.406 282.75 112 290.797 112C297.414 112 303.582 112.944 309.301 114.83C315.06 116.679 320.187 119.317 324.68 122.744C329.214 126.133 332.992 130.196 336.015 134.933C339.038 139.631 341.121 144.849 342.265 150.587H326.579Z" fill="#23499A" />
          </svg>
          

          {/* <svg
            ref={svgRef}
            viewBox="0 0 518 346"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              ref={pathRef}
              d="M117.683 13.7703C111.896 22.8946 106.12 35.2326 104.842 41.1846C101.363 57.4183 100.381 57.8867 88.4843 48.9829C76.3771 39.924 61.008 31.7778 49.0833 28.0992C41.8638 25.8741 41.3402 26.7283 41.447 40.5818C41.509 48.759 44.3679 63.5873 47.8054 73.5349L54.0537 91.6182H44.4196C32.8772 91.6182 0 98.3796 0 100.756C0 101.679 4.495 108.913 9.98889 116.832C37.2172 156.078 65.3239 167.303 109.557 156.594C127.992 152.13 136.217 146.729 124.575 146.729C120.342 146.729 109.471 142.975 100.416 138.387C78.0856 127.068 49.3933 95.0626 61.5798 95.0626C68.9337 95.0626 90.303 106.261 101.191 115.822L113.081 126.262L106.485 108.902C99.9578 91.7284 97.4812 64.042 102.472 64.0867C107.573 64.1315 121.806 88.9005 125.836 104.742L129.945 120.896L132.559 108.84C135.89 93.4782 145.903 73.6278 153.498 67.3245C158.968 62.7847 159.281 63.9076 157.89 83.0553C157.063 94.3944 153.75 108.951 150.526 115.399C142.566 131.322 142.924 131.477 156.447 117.958C167.345 107.06 197.849 91.9833 201.538 95.6723C204.71 98.8481 185.879 120.469 170.28 131.56C161.524 137.784 149.854 143.867 144.346 145.076C122.226 149.936 141.766 156.983 177.389 156.99C207.152 156.997 242.854 134.319 258.189 105.668C261.578 99.3337 260.868 97.9904 252.443 94.7802C247.16 92.7652 235.083 90.516 225.611 89.7823C216.139 89.0486 208.079 88.3873 207.703 88.3115C207.328 88.2357 209.264 82.797 212.009 76.2284C214.754 69.6599 217 55.6031 217 44.9976C217 26.5802 216.649 25.819 209.25 28.1061C194.677 32.6114 177.392 42.7209 169.139 51.5662C160.435 60.8903 155.024 60.6492 154.966 50.9427C154.928 44.2295 140.988 13.8874 133.369 3.92608C128.416 -2.54603 127.775 -2.14304 117.683 13.7703ZM217.933 167.272C183.947 182.7 179.325 228.139 209.546 249.66C214.978 253.528 231.663 259.996 246.626 264.037C281.291 273.395 289.333 278.462 289.333 290.941C289.333 304.557 278.662 312.776 258.454 314.718C242.427 316.258 240.474 315.559 229.142 304.227C222.463 297.548 217 289.429 217 286.181C217 281.097 214.74 280.618 200.639 282.716C191.642 284.056 183.641 285.771 182.866 286.529C178.891 290.404 191.676 318.521 201.724 327.997C221.722 346.858 269.204 351.867 296.109 337.955C319.662 325.775 331.548 298.757 324.181 274.16C318.16 254.062 301.671 241.937 268.253 233.037C233.258 223.716 223.889 218.226 223.889 207.048C223.889 196.167 232.955 191.507 254.128 191.507C271.319 191.507 278.742 196.071 283.536 209.59C285.197 214.278 289.63 215.618 303.452 215.618H321.236L319.186 202.994C316.627 187.222 299.109 168.526 282.596 163.938C263.001 158.492 233.971 159.99 217.933 167.272ZM404.722 165.688C348.891 185.445 333.054 276.664 377.694 321.363C404.23 347.933 450.213 353.489 490.592 335.006C518.227 322.355 518.544 321.721 517.3 281.693L516.209 246.618H478.55H440.889V262.118V277.618H461.556H482.222V289.281C482.222 299.349 480.476 301.774 469.443 307.01C425.389 327.914 389.222 303.414 389.222 252.667C389.222 216.045 404.519 195.117 433.318 192.351C453.186 190.443 470.184 197.773 476.126 210.813C479.687 218.629 481.396 219.231 494.057 217.148C516.563 213.441 517.49 212.139 509.344 195.675C497.354 171.443 475.337 160.4 439.515 160.659C427.955 160.741 412.3 163.004 404.722 165.688ZM117.111 227.45C117.111 303.596 114.049 315.314 94.1057 315.455C84.3992 315.521 75.9569 306.924 73.4562 294.424C71.8718 286.501 69.6536 284.517 62.4306 284.555C36.5938 284.69 32.8049 291.913 44.7502 318.239C53.7058 337.965 75.3782 348.329 101.27 345.264C119.88 343.059 131.268 336.418 142.731 321.08C149.299 312.293 149.913 306.031 150.884 237.766L151.934 163.952H134.523H117.111V227.45Z"
              fill="transparent"
            />
          </svg> */}
        </div>
        <img
          ref={imgRef}
          src="./desc.svg"
          alt="Logo"
          className="w-48 h-48 animate-fadeIn"
          style={{ fontFamily: ' "Cal Sans", sans-serif' }}
        />
        <h1
          ref={textRef}
          className="text-5xl text-md text-center text-[#FFCE32] animate-fadeIn"
          style={{ fontFamily: ' "Cal Sans", sans-serif' }}
        >

          JAI JINENDRA
          
        </h1>
      </div>
    </div>
  );
};

export default TracingLoaderAnimation;